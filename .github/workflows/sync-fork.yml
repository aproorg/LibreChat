name: Sync Fork and Manage PR

on:
  schedule:
    - cron: '0 0 * * *' # Run daily at midnight UTC
  workflow_dispatch:
  push:
    branches:
      - ci-improve-sync

jobs:
  sync-fork:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/danny-avila/LibreChat.git

      - name: Fetch upstream and origin
        run: |
          git fetch upstream
          git fetch origin

      - name: Check for existing sync PR
        id: check_pr
        run: |
          PR_DATA=$(gh pr list --repo ${{ github.repository }} --base main --head "upstream-sync/" --json number,headRefName --jq '.[0]')
          if [ -n "$PR_DATA" ]; then
            echo "existing_pr=$(echo $PR_DATA | jq -r .number)" >> $GITHUB_OUTPUT
            echo "existing_branch=$(echo $PR_DATA | jq -r .headRefName)" >> $GITHUB_OUTPUT
            echo "An existing sync PR was found: #$(echo $PR_DATA | jq -r .number)"
          else
            echo "No existing sync PR found."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sync changes
        id: sync
        run: |
          if [ -n "${{ steps.check_pr.outputs.existing_branch }}" ]; then
            BRANCH="${{ steps.check_pr.outputs.existing_branch }}"
          else
            BRANCH="upstream-sync/$(date +%Y%m%d-%H%M%S)"
          fi

          git checkout -b $BRANCH

          # Merge upstream changes
          git merge upstream/main --no-commit --no-ff

          # Remove changes to workflow files
          git restore --staged .github/workflows
          git checkout -- .github/workflows

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to sync (excluding workflows)"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            git commit -m "Sync with upstream/main (excluding workflow files)"
            git push origin $BRANCH --force
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create or Update Pull Request
        if: steps.sync.outputs.has_changes == 'true'
        run: |
          if [ -n "${{ steps.check_pr.outputs.existing_pr }}" ]; then
            gh pr edit ${{ steps.check_pr.outputs.existing_pr }} \
              --title "auto: sync fork with upstream" \
              --body "This PR syncs the fork with the upstream main branch (excluding workflow files). Automatically updated by GitHub Actions."
          else
            gh pr create \
              --title "auto: sync fork with upstream" \
              --body "This PR syncs the fork with the upstream main branch (excluding workflow files). Automatically created by GitHub Actions." \
              --base main \
              --head ${{ steps.sync.outputs.branch }}
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge for PR
        if: steps.sync.outputs.has_changes == 'true'
        run: |
          PR_NUMBER=$(gh pr list --head ${{ steps.sync.outputs.branch }} --json number --jq '.[0].number')
          gh pr merge $PR_NUMBER --auto --merge
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
