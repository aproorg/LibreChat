name: Sync Fork and Manage PR

on:
  push:
    branches:
      - ci-improve-sync
  schedule:
    - cron: '0 0 * * *' # Run daily at midnight UTC
  workflow_dispatch:

jobs:
  sync-fork:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
    steps:
      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Add upstream remote
        run: |
          git remote add upstream https://github.com/danny-avila/LibreChat.git

      - name: Fetch upstream and origin
        run: |
          git fetch upstream
          git fetch origin

      - name: Check for existing sync PR
        id: check_pr
        run: |
          PR_DATA=$(gh pr list --repo ${{ github.repository }} --base main --head "upstream-sync/" --json number,headRefName --jq '.[0]')
          if [ -n "$PR_DATA" ]; then
            echo "existing_pr=$(echo $PR_DATA | jq -r .number)" >> $GITHUB_OUTPUT
            echo "existing_branch=$(echo $PR_DATA | jq -r .headRefName)" >> $GITHUB_OUTPUT
            echo "An existing sync PR was found: #$(echo $PR_DATA | jq -r .number)"
          else
            echo "No existing sync PR found."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update existing PR
        if: steps.check_pr.outputs.existing_pr
        id: update_existing_pr
        run: |
          EXISTING_PR="${{ steps.check_pr.outputs.existing_pr }}"
          EXISTING_BRANCH="${{ steps.check_pr.outputs.existing_branch }}"
          git checkout $EXISTING_BRANCH

          if git merge upstream/main --no-commit --no-ff; then
            echo "Merged upstream changes successfully."
            git commit -m "Sync with upstream/main"
            git push origin $EXISTING_BRANCH
            echo "Updated existing PR #$EXISTING_PR"
            echo "merge_status=success" >> $GITHUB_OUTPUT
          else
            echo "Conflicts detected. Aborting merge."
            git merge --abort
            echo "merge_status=conflict" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create new sync branch
        if: '!steps.check_pr.outputs.existing_pr'
        run: |
          SYNC_BRANCH="upstream-sync/$(date +%Y%m%d-%H%M%S)"
          git checkout -b $SYNC_BRANCH upstream/main
          echo "SYNC_BRANCH=$SYNC_BRANCH" >> $GITHUB_ENV

      - name: Push new sync branch
        if: '!steps.check_pr.outputs.existing_pr'
        run: |
          git push origin ${{ env.SYNC_BRANCH }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        if: '!steps.check_pr.outputs.existing_pr'
        run: |
          PR_URL=$(gh pr create --title "auto: sync fork with upstream" \
            --body "This PR syncs the fork with the upstream main branch. Automatically created by GitHub Actions." \
            --base main \
            --head ${{ env.SYNC_BRANCH }} \
            --repo ${{ github.repository }})
          echo "PR_URL=$PR_URL" >> $GITHUB_ENV
          echo "PR_NUMBER=$(echo $PR_URL | awk -F/ '{print $NF}')" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge for new PR
        if: '!steps.check_pr.outputs.existing_pr'
        run: |
          gh pr merge ${{ env.PR_NUMBER }} --auto --merge --repo ${{ github.repository }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify about conflicts in existing PR
        if: steps.update_existing_pr.outputs.merge_status == 'conflict'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ steps.check_pr.outputs.existing_pr }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ Conflicts detected while attempting to sync with upstream/main. Please resolve these conflicts manually to update the PR.'
            })

      - name: Check for conflicts in new PR
        if: '!steps.check_pr.outputs.existing_pr'
        id: check_conflicts
        run: |
          if gh pr view ${{ env.PR_NUMBER }} --json mergeStateStatus -q .mergeStateStatus | grep -q "CONFLICTING"; then
            echo "has_conflicts=true" >> $GITHUB_OUTPUT
          else
            echo "has_conflicts=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify if conflicts exist in new PR
        if: "!steps.check_pr.outputs.existing_pr && steps.check_conflicts.outputs.has_conflicts == 'true'"
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ env.PR_NUMBER }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '⚠️ This PR has conflicts that need to be resolved manually.'
            })
