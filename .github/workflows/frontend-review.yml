name: Frontend Unit Tests

on:
  pull_request:
    branches:
      - main
      - dev
      - release/*
    paths:
      - 'client/**'
      - 'packages/**'
      - '.github/**'

concurrency:
  group: frontend-tests-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}

jobs:
  tests_frontend_ubuntu:
    name: Run frontend unit tests on Ubuntu
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github-oidc-genai
          aws-region: ${{ env.AWS_REGION }}

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Setup npm cache
        uses: runs-on/cache@v4
        env:
          RUNS_ON_S3_BUCKET_CACHE: ${{ secrets.RUNS_ON_S3_BUCKET_CACHE }}
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build Client
        run: npm run frontend:ci

      - name: Run unit tests
        run: npm run test:ci --verbose
        working-directory: client

  tests_frontend_windows:
    name: Run frontend unit tests on Windows
    if: false
    timeout-minutes: 60
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Client
        run: npm run frontend:ci

      - name: Run unit tests
        run: npm run test:ci --verbose
        working-directory: client

  success:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    needs:
      - tests_frontend_ubuntu
    steps:
      - name: Check frontend success
        run: '[[ ${{ needs.tests_frontend_ubuntu.result }} == "success" ]] || exit 1'
      - name: Announce success
        run: echo "Test is successful"
